

class Solution {
    public int[][] kClosest(int[][] points, int k) {
        // Max-heap based on distance (farthest at top)
        PriorityQueue<int[]> pq = new PriorityQueue<>((a, b) -> 
            Integer.compare(b[0]*b[0] + b[1]*b[1], a[0]*a[0] + a[1]*a[1]));

        for (int[] point : points) {
            pq.offer(point);
            if (pq.size() > k) {
                pq.poll(); // Remove farthest point
            }
        }

        // Collect k closest points
        int[][] result = new int[k][2];
        for (int i = 0; i < k; i++) {
            result[i] = pq.poll();
        }

        return result;
    }
}
