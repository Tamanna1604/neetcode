class PrefixTree {

    class TrieNode {
        TrieNode[] al = new TrieNode[26];
        boolean isend;

        TrieNode() {
            isend = false;
        }
    }

    private TrieNode root;

    public PrefixTree() {
        root = new TrieNode();
    }

    public void insert(String word) {
        TrieNode node = root;
        for (char ch : word.toCharArray()) {
            int ind = ch - 'a';
            if (node.al[ind] == null) {
                node.al[ind] = new TrieNode();
            }
            node = node.al[ind];
        }
        node.isend = true;
    }

    public boolean search(String word) {
        TrieNode node = root;
        for (char ch : word.toCharArray()) {
            int ind = ch - 'a';
            if (node.al[ind] == null) {
                return false;
            }
            node = node.al[ind];
        }
        return node.isend;
    }

    public boolean startsWith(String prefix) {
        TrieNode node = root;
        for (char ch : prefix.toCharArray()) {
            int ind = ch - 'a';
            if (node.al[ind] == null) {
                return false;
            }
            node = node.al[ind];
        }
        return true;
    }
}
