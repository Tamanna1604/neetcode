class Solution {
    public List<List<Integer>> subsetsWithDup(int[] nums) {
        List<Integer> sub = new ArrayList<>();
        List<List<Integer>> res = new ArrayList<>();
        Arrays.sort(nums); // Sorting is correct
        helper(0, nums, sub, res);
        return res;
    }

    void helper(int ind, int[] nums, List<Integer> sub, List<List<Integer>> res) {
        if (ind == nums.length) {
            res.add(new ArrayList<>(sub));
            return;
        }

        // Include current element
        sub.add(nums[ind]);
        helper(ind + 1, nums, sub, res);
        sub.remove(sub.size() - 1);

        // Skip duplicates safely
        while (ind + 1 < nums.length && nums[ind] == nums[ind + 1]) {
            ind++;
        }

        // Exclude current element
        helper(ind + 1, nums, sub, res);
    }
}
