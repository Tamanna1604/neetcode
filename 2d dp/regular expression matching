import java.util.HashMap;
import java.util.Map;

class Solution {
    Map<String, Boolean> memo = new HashMap<>();

    public boolean isMatch(String s, String p) {
        return dp(0, 0, s, p);
    }

    private boolean dp(int i, int j, String s, String p) {
        String key = i + "," + j;
        if (memo.containsKey(key)) {
            return memo.get(key);
        }

        if (j == p.length()) {
            return i == s.length();
        }

        boolean firstMatch = (i < s.length() &&
                              (s.charAt(i) == p.charAt(j) || p.charAt(j) == '.'));

        boolean result;

        if (j + 1 < p.length() && p.charAt(j + 1) == '*') {
            // Try zero occurrence of p[j] OR one/more if firstMatch
            result = dp(i, j + 2, s, p) || (firstMatch && dp(i + 1, j, s, p));
        } else {
            result = firstMatch && dp(i + 1, j + 1, s, p);
        }

        memo.put(key, result);
        return result;
    }
}
